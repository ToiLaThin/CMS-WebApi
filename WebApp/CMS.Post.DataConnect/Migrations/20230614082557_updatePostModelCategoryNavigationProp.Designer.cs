// <auto-generated />
using System;
using CMS.Post.DataConnect;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS.Post.DataConnect.Migrations
{
    [DbContext(typeof(PostContext))]
    [Migration("20230614082557_updatePostModelCategoryNavigationProp")]
    partial class updatePostModelCategoryNavigationProp
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CMS.DataModel.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 0L);

                    b.Property<short>("CreateBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0)
                        .HasColumnName("CategoryCreateBy");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CategoryCreateDate")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CategoryDescription");

                    b.Property<short?>("ModifiedBy")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CategoryName");

                    b.HasKey("Id");

                    b.ToTable("Category", "Category");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Description = "Unknown",
                            Name = "Default"
                        },
                        new
                        {
                            Id = -2,
                            Description = "Physical Activitis and all kind of outdoor activities",
                            Name = "Sport"
                        });
                });

            modelBuilder.Entity("CMS.DataModel.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PostId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 0L);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PostContent");

                    b.Property<short>("CreateBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0)
                        .HasColumnName("PostCreateBy");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("PostCreateDate")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PostImageUrl");

                    b.Property<short?>("ModifiedBy")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("PostStatus");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PostTitle");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Post", "Post");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CategoryId = -1,
                            Content = "Content 1",
                            Image = "None",
                            Status = 0,
                            Title = "Title 1"
                        },
                        new
                        {
                            Id = -2,
                            CategoryId = -2,
                            Content = "Content 2",
                            Image = "None",
                            Status = 0,
                            Title = "Title 2"
                        },
                        new
                        {
                            Id = -3,
                            CategoryId = -1,
                            Content = "Content 3",
                            Image = "None",
                            Status = 0,
                            Title = "Title 3"
                        });
                });

            modelBuilder.Entity("CMS.DataModel.Post", b =>
                {
                    b.HasOne("CMS.DataModel.Category", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CMS.DataModel.Category", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
